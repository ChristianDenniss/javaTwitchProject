import javafx.animation.KeyFrame;
import javafx.animation.KeyValue;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javafx.stage.Stage;
import javafx.util.Duration;

public class GameUI extends Application
{
    private ImageView backgroundImageView;
    private Text title;
    private StackPane root;
    private VBox buttonBox;
    private Button creditsButton;
    private Button backButton;

    @Override
    public void start(Stage primaryStage)
    {
        root = new StackPane();

        Image initialBackgroundImage = new Image("file:resources/backdrop.jpg");
        backgroundImageView = new ImageView(initialBackgroundImage);
        backgroundImageView.setPreserveRatio(false);
        backgroundImageView.setFitWidth(800);
        backgroundImageView.setFitHeight(600);

        title = new Text("TitlePlaceHolder");
        title.setFont(Font.font("Arial", 48));
        title.setStyle("-fx-fill: white; -fx-stroke: black; -fx-stroke-width: 2;");

        // Adding a smoother, controlled floaty effect to the title
        addSmoothFloatyEffectToTitle();

        Button playButton = createStyledButton("Play", "#007bff", "#0056b3");
        creditsButton = createStyledButton("Credits", "#28a745", "#1c7430");
        Button wipButton = createStyledButton("WIP", "#ffc107", "#e0a800");

        setButtonHoverEffect(playButton, "#0056b3");
        setButtonHoverEffect(creditsButton, "#218838");
        setButtonHoverEffect(wipButton, "#e0a800");

        buttonBox = new VBox(10);
        buttonBox.setAlignment(Pos.CENTER);
        buttonBox.getChildren().addAll(playButton, creditsButton, wipButton);

        root.getChildren().addAll(backgroundImageView, title, buttonBox);
        StackPane.setAlignment(title, Pos.TOP_CENTER);
        StackPane.setAlignment(buttonBox, Pos.CENTER);

        StackPane.setMargin(title, new Insets(100, 0, 0, 0));
        StackPane.setMargin(buttonBox, new Insets(150, 0, 0, 0));

        Scene scene = new Scene(root, 800, 600);

        scene.widthProperty().addListener((obs, oldVal, newVal) -> backgroundImageView.setFitWidth(scene.getWidth()));
        scene.heightProperty().addListener((obs, oldVal, newVal) -> backgroundImageView.setFitHeight(scene.getHeight()));

        primaryStage.setTitle("Java-Mon");
        primaryStage.setScene(scene);
        primaryStage.show();

        playButton.setOnAction(e -> changeScreen(playButton, root, null));
        creditsButton.setOnAction(e -> changeScreen(creditsButton, root, "Credits"));
        wipButton.setOnAction(e -> changeScreen(wipButton, root, "WIP"));
    }

    private Button createStyledButton(String text, String bgColor, String borderColor)
    {
        Button button = new Button(text);
        button.setStyle(String.format(
                "-fx-font-size: 30px; " +
                        "-fx-padding: 10 20; " +
                        "-fx-background-color: %s; " +
                        "-fx-text-fill: white; " +
                        "-fx-border-radius: 10px; " +
                        "-fx-background-radius: 10px; " +
                        "-fx-border: 2px solid %s; " +
                        "-fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.2), 5, 0, 0, 2);",
                bgColor, borderColor));
        return button;
    }

    private void setButtonHoverEffect(Button button, String hoverColor)
    {
        button.setOnMouseEntered(e -> button.setStyle(button.getStyle().replaceFirst("-fx-background-color: #[a-fA-F0-9]{6};", "-fx-background-color: " + hoverColor + ";")));
        button.setOnMouseExited(e -> button.setStyle(button.getStyle().replaceFirst("-fx-background-color: #[a-fA-F0-9]{6};", "-fx-background-color: #007bff;")));
    }

    private void addSmoothFloatyEffectToTitle()
    {
        // Define the floating and scaling effect for the title
        Timeline timeline = new Timeline(
            new KeyFrame(Duration.ZERO,
                new KeyValue(title.translateYProperty(), 0),
                new KeyValue(title.scaleXProperty(), 1),
                new KeyValue(title.scaleYProperty(), 1),
                new KeyValue(title.rotateProperty(), 0)
            ),
            new KeyFrame(Duration.seconds(2),
                new KeyValue(title.translateYProperty(), -20),  // Move up
                new KeyValue(title.scaleXProperty(), 1.1),    // Slightly grow
                new KeyValue(title.scaleYProperty(), 1.1),
                new KeyValue(title.rotateProperty(), 10)       // Small rotation
            ),
            new KeyFrame(Duration.seconds(4),
                new KeyValue(title.translateYProperty(), 0),   // Move down to original position
                new KeyValue(title.scaleXProperty(), 1),       // Reset scale
                new KeyValue(title.scaleYProperty(), 1),
                new KeyValue(title.rotateProperty(), 0)        // Reset rotation
            )
        );

        timeline.setCycleCount(Timeline.INDEFINITE);  // Loop the animation forever
        timeline.setAutoReverse(true);  // Makes the animation go back and forth
        timeline.play();  // Start the animation
    }

    private void changeScreen(Button button, StackPane root, String buttonType)
    {
        // Hide background image temporarily
        backgroundImageView.setVisible(false);

        title.setVisible(false);
        title.setDisable(true);
        buttonBox.setVisible(false);
        buttonBox.setDisable(true);

        String videoFilePath = "file:/resources/transScreen.mp4";

        Media media = new Media(videoFilePath);
        MediaPlayer mediaPlayer = new MediaPlayer(media);
        MediaView mediaView = new MediaView(mediaPlayer);
        mediaView.setPreserveRatio(false);
        mediaView.setFitWidth(800);
        mediaView.setFitHeight(600);

        root.getChildren().add(mediaView);

        mediaPlayer.play();

        Scene scene = button.getScene();
        scene.widthProperty().addListener((obs, oldVal, newVal) -> mediaView.setFitWidth(newVal.doubleValue()));
        scene.heightProperty().addListener((obs, oldVal, newVal) -> mediaView.setFitHeight(newVal.doubleValue()));

        mediaPlayer.setOnEndOfMedia(() ->
        {
            root.getChildren().remove(mediaView);

            // Change the background image to black.jpg after the video transition finishes
            if ("Credits".equals(buttonType) || "WIP".equals(buttonType))
            {
                backgroundImageView.setImage(new Image("file:resources/black.jpg"));
                backgroundImageView.setVisible(true); // Now show the updated background
                createBackButton(root); // Keep the back button for "Credits" and "WIP"
            }
            else
            {
                resetScreen(root); // Reset to the initial screen for the play button
            }
        });
    }

    private void createBackButton(StackPane root)
    {
        backButton = createStyledButton("Back", "#dc3545", "#c82333");

        StackPane.setAlignment(backButton, Pos.TOP_LEFT);
        StackPane.setMargin(backButton, new Insets(30, 0, 0, 30));

        root.getChildren().add(backButton);

        backButton.setOnAction(e ->
        {
            changeScreen(backButton, root, null); // Play transition
            resetScreen(root); // Reset screen after transition
            root.getChildren().remove(backButton);
        });
    }

    private void resetScreen(StackPane root)
    {
        title.setVisible(true);
        title.setDisable(false);
        buttonBox.setVisible(true);
        buttonBox.setDisable(false);
        backgroundImageView.setImage(new Image("file:resources/backdrop.jpg"));
        backgroundImageView.setVisible(true); // Ensure the background is visible again
    }

    public static void main(String[] args)
    {
        launch(args);
    }
}
