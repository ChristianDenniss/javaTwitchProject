import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javafx.stage.Stage;

public class GameUI extends Application {
    private ImageView backgroundImageView;
    private Text title;
    private StackPane root;
    private VBox buttonBox;
    private Button creditsButton;
    private Button backButton; // For the back button

    @Override
    public void start(Stage primaryStage) {
        // Root layout
        root = new StackPane();

        // Initial background image setup
        Image initialBackgroundImage = new Image("file:resources/backdrop.jpg"); // Adjust the path as needed
        backgroundImageView = new ImageView(initialBackgroundImage);
        backgroundImageView.setPreserveRatio(false); // Stretch to fit
        backgroundImageView.setFitWidth(800); // Adjust dynamically to the scene width
        backgroundImageView.setFitHeight(600); // Adjust dynamically to the scene height

        // Game title setup
        title = new Text("JAVA-MON");
        title.setFont(Font.font("Arial", 48)); // Large font size
        title.setStyle("-fx-fill: white; -fx-stroke: black; -fx-stroke-width: 2;"); // Add white text with black outline

        // Play button setup (smaller and less tall)
        Button playButton = new Button("Play");
        playButton.setStyle(
                "-fx-font-size: 30px; " +
                        "-fx-padding: 10 20; " +
                        "-fx-background-color: #007bff; " +
                        "-fx-text-fill: white; " +
                        "-fx-border-radius: 10px; " +
                        "-fx-background-radius: 10px; " +
                        "-fx-border: 2px solid #0056b3; " +
                        "-fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.2), 5, 0, 0, 2);"
        );

        // Credits button setup (smaller)
        creditsButton = new Button("Credits");
        creditsButton.setStyle(
                "-fx-font-size: 30px; " +
                        "-fx-padding: 10 20; " +
                        "-fx-background-color: #28a745; " +
                        "-fx-text-fill: white; " +
                        "-fx-border-radius: 10px; " +
                        "-fx-background-radius: 10px; " +
                        "-fx-border: 2px solid #1c7430; " +
                        "-fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.2), 5, 0, 0, 2);"
        );

        // WIP button setup (smaller)
        Button wipButton = new Button("WIP");
        wipButton.setStyle(
                "-fx-font-size: 30px; " +
                        "-fx-padding: 10 20; " +
                        "-fx-background-color: #ffc107; " +
                        "-fx-text-fill: white; " +
                        "-fx-border-radius: 10px; " +
                        "-fx-background-radius: 10px; " +
                        "-fx-border: 2px solid #e0a800; " +
                        "-fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.2), 5, 0, 0, 2);"
        );

        // Hover effect with scaling for all buttons (Play, Credits, WIP)
        setButtonHoverEffect(playButton, "#0056b3");
        setButtonHoverEffect(creditsButton, "#218838");
        setButtonHoverEffect(wipButton, "#e0a800");

        // Create VBox to stack the buttons vertically like a ladder
        buttonBox = new VBox(10); // Vertical layout with 10px spacing between buttons
        buttonBox.setAlignment(Pos.CENTER); // Center align the buttons
        buttonBox.getChildren().addAll(playButton, creditsButton, wipButton); // Add buttons to VBox

        // Layout setup
        root.getChildren().addAll(backgroundImageView, title, buttonBox);
        StackPane.setAlignment(title, Pos.TOP_CENTER); // Title at the top center
        StackPane.setAlignment(buttonBox, Pos.CENTER); // Button box centered

        // Set the margin for proper spacing
        StackPane.setMargin(title, new Insets(100, 0, 0, 0));  // Margin at the top to space the title
        StackPane.setMargin(buttonBox, new Insets(150, 0, 0, 0)); // Lower the button stack

        Scene scene = new Scene(root, 800, 600);

        // Dynamically resize backdrop image to fit the window
        scene.widthProperty().addListener((obs, oldVal, newVal) -> backgroundImageView.setFitWidth(scene.getWidth()));
        scene.heightProperty().addListener((obs, oldVal, newVal) -> backgroundImageView.setFitHeight(scene.getHeight()));

        primaryStage.setTitle("Java-Mon");
        primaryStage.setScene(scene);
        primaryStage.show();

        // Handle button clicks (all buttons do the same action)
        playButton.setOnAction(e -> changeScreen(playButton, root, null));
        creditsButton.setOnAction(e -> changeScreen(creditsButton, root, "Credits"));
        wipButton.setOnAction(e -> changeScreen(wipButton, root, null));
    }

    private void setButtonHoverEffect(Button button, String hoverColor) {
        button.setOnMouseEntered(e -> {
            button.setStyle(
                    "-fx-font-size: 30px; " +
                            "-fx-padding: 10 20; " +
                            "-fx-background-color: " + hoverColor + "; " +
                            "-fx-text-fill: white; " +
                            "-fx-border-radius: 10px; " +
                            "-fx-background-radius: 10px; " +
                            "-fx-border: 2px solid #003366; " +
                            "-fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.2), 5, 0, 0, 2);"
            );
        });

        button.setOnMouseExited(e -> {
            button.setStyle(
                    "-fx-font-size: 30px; " +
                            "-fx-padding: 10 20; " +
                            "-fx-background-color: #007bff; " +
                            "-fx-text-fill: white; " +
                            "-fx-border-radius: 10px; " +
                            "-fx-background-radius: 10px; " +
                            "-fx-border: 2px solid #0056b3; " +
                            "-fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.2), 5, 0, 0, 2);"
            );
        });
    }

    private void changeScreen(Button button, StackPane root, String buttonType) {
        // Disable and hide the title and buttons
        title.setVisible(false);
        title.setDisable(true);
        button.setVisible(false);
        button.setDisable(true);
        buttonBox.setVisible(false); // Hide the buttonBox (which contains all buttons)
        buttonBox.setDisable(true);  // Disable the button box to prevent any interaction

        // Video file path (transScreen)
        String videoFilePath = "file:/resources/transScreen.mp4"; // Adjust path if needed

        // Create Media and MediaPlayer
        Media media = new Media(videoFilePath);
        MediaPlayer mediaPlayer = new MediaPlayer(media);

        // Create a MediaView to display the video
        MediaView mediaView = new MediaView(mediaPlayer);
        mediaView.setPreserveRatio(false); // Turn off aspect ratio to stretch the video
        mediaView.setFitWidth(800);  // Fit video width to window
        mediaView.setFitHeight(600); // Fit video height to window

        // Add the MediaView to the root layout
        root.getChildren().add(mediaView);

        // Start the video
        mediaPlayer.play();

        // Resize video dynamically with the scene while stretching it to the window
        Scene scene = button.getScene();
        scene.widthProperty().addListener((obs, oldVal, newVal) -> mediaView.setFitWidth(newVal.doubleValue()));
        scene.heightProperty().addListener((obs, oldVal, newVal) -> mediaView.setFitHeight(newVal.doubleValue()));

        // When the video ends, change the background and create the "Back" button
        mediaPlayer.setOnEndOfMedia(() -> {
            mediaView.setVisible(false); // Hide the video
            if (buttonType != null && buttonType.equals("Credits")) {
                createBackButton(root);
            }
        });
    }

    private void createBackButton(StackPane root) {
        // Create the "Back" button
        backButton = new Button("Back");
        backButton.setStyle(
                "-fx-font-size: 20px; " +
                        "-fx-padding: 10 20; " +
                        "-fx-background-color: #dc3545; " +
                        "-fx-text-fill: white; " +
                        "-fx-border-radius: 10px; " +
                        "-fx-background-radius: 10px; " +
                        "-fx-border: 2px solid #c82333; " +
                        "-fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.2), 5, 0, 0, 2);"
        );

        // Position the back button slightly off the top-left corner
        StackPane.setAlignment(backButton, Pos.TOP_LEFT);
        StackPane.setMargin(backButton, new Insets(30, 0, 0, 30)); // Margin from top-left corner

        // Add the back button to root
        root.getChildren().add(backButton);

        // When the "Back" button is pressed, return to the starting screen
        backButton.setOnAction(e -> {
            resetScreen(root);
            root.getChildren().remove(backButton); // Remove the "Back" button after click
        });
    }

    private void resetScreen(StackPane root) {
        // Reset the title and buttons to their original state
        title.setVisible(true);
        title.setDisable(false);
        buttonBox.setVisible(true); // Show the buttonBox (which contains all buttons)
        buttonBox.setDisable(false); // Enable the buttonBox

        // Reset the background image to the initial one
        backgroundImageView.setImage(new Image("file:resources/backdrop.jpg"));
    }

    public static void main(String[] args) {
        launch(args);
    }
}
